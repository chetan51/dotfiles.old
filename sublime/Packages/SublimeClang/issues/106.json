[
  {
    "url": "https://api.github.com/repos/quarnster/SublimeClang/issues/comments/7462168",
    "html_url": "https://github.com/quarnster/SublimeClang/issues/106#issuecomment-7462168",
    "issue_url": "https://api.github.com/repos/quarnster/SublimeClang/issues/106",
    "id": 7462168,
    "user": {
      "login": "meyumer",
      "id": 1783195,
      "avatar_url": "https://secure.gravatar.com/avatar/0c90fca887102012b8841ac2c258d668?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "0c90fca887102012b8841ac2c258d668",
      "url": "https://api.github.com/users/meyumer",
      "html_url": "https://github.com/meyumer",
      "followers_url": "https://api.github.com/users/meyumer/followers",
      "following_url": "https://api.github.com/users/meyumer/following",
      "gists_url": "https://api.github.com/users/meyumer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meyumer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meyumer/subscriptions",
      "organizations_url": "https://api.github.com/users/meyumer/orgs",
      "repos_url": "https://api.github.com/users/meyumer/repos",
      "events_url": "https://api.github.com/users/meyumer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meyumer/received_events",
      "type": "User"
    },
    "created_at": "2012-08-02T17:27:35Z",
    "updated_at": "2012-08-02T17:27:35Z",
    "body": "How about this? search starts from the files in the same folder with the same named files in the same folder, as in your previous implementation. Then continues the search with files in open folders. May be there is a quick way of making this search optional?"
  },
  {
    "url": "https://api.github.com/repos/quarnster/SublimeClang/issues/comments/7463363",
    "html_url": "https://github.com/quarnster/SublimeClang/issues/106#issuecomment-7463363",
    "issue_url": "https://api.github.com/repos/quarnster/SublimeClang/issues/106",
    "id": 7463363,
    "user": {
      "login": "quarnster",
      "id": 1230389,
      "avatar_url": "https://secure.gravatar.com/avatar/10a89302c6736c988ce06d8a41c923c0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "10a89302c6736c988ce06d8a41c923c0",
      "url": "https://api.github.com/users/quarnster",
      "html_url": "https://github.com/quarnster",
      "followers_url": "https://api.github.com/users/quarnster/followers",
      "following_url": "https://api.github.com/users/quarnster/following",
      "gists_url": "https://api.github.com/users/quarnster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarnster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarnster/subscriptions",
      "organizations_url": "https://api.github.com/users/quarnster/orgs",
      "repos_url": "https://api.github.com/users/quarnster/repos",
      "events_url": "https://api.github.com/users/quarnster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarnster/received_events",
      "type": "User"
    },
    "created_at": "2012-08-02T18:08:40Z",
    "updated_at": "2012-08-02T18:08:40Z",
    "body": "@gunayorbay, If you want ctags functionality, why not just use the [ctags plugin](https://github.com/SublimeText/CTags)?\n\n@meyumer, I'm against anything that has a worst case scenario (ie, there is no implementation to be found) of using clang to parse every single .c, .cpp, etc file in a project, especially when that operation blocks the main thread. I'm not a fan of the current implementation blocking the main thread either, even though it's most likely only scanning through a single file.\n\nBut having to parse every file is like kicking off a build. Maybe it'll work for smaller projects but some of the projects I'm involved with have a build time of more than 30 minutes and since it's done in the main thread you wont be able to use ST2 at all during that time. It'd be much faster to just do a regular \"find in files\" searching for the implementation you want at that point.\n\nHere's what I'd ideally like:\n\n1) Keep the same directory same name check as a quick path.\n2) If such a file doesn't exist, check if there's a file open already with a filename that matches the header\n3) If that also fails, do the following work in a separate thread:\n4) Use a priority queue with filenames matching the header name being pushed on top\n5) Use a regex search inside of the files to eliminate having to parse files with clang that obviously do not contain the implementation\n6) Only files that pass the regex search are then passed on to clang for parsing\n7) Make it possible to cancel this scan operation.\n"
  },
  {
    "url": "https://api.github.com/repos/quarnster/SublimeClang/issues/comments/7467218",
    "html_url": "https://github.com/quarnster/SublimeClang/issues/106#issuecomment-7467218",
    "issue_url": "https://api.github.com/repos/quarnster/SublimeClang/issues/106",
    "id": 7467218,
    "user": {
      "login": "meyumer",
      "id": 1783195,
      "avatar_url": "https://secure.gravatar.com/avatar/0c90fca887102012b8841ac2c258d668?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "0c90fca887102012b8841ac2c258d668",
      "url": "https://api.github.com/users/meyumer",
      "html_url": "https://github.com/meyumer",
      "followers_url": "https://api.github.com/users/meyumer/followers",
      "following_url": "https://api.github.com/users/meyumer/following",
      "gists_url": "https://api.github.com/users/meyumer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meyumer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meyumer/subscriptions",
      "organizations_url": "https://api.github.com/users/meyumer/orgs",
      "repos_url": "https://api.github.com/users/meyumer/repos",
      "events_url": "https://api.github.com/users/meyumer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meyumer/received_events",
      "type": "User"
    },
    "created_at": "2012-08-02T20:30:16Z",
    "updated_at": "2012-08-02T20:36:44Z",
    "body": "@quarnster \nI can see what you have explained is a better solution, but I am afraid I will not be able to devote that much time to that at this time. \n\nHere is another modification (see the recent update to the code):\nThe search is much more limited now. in the worst case there will only be a few number of files to be parsed by clang, because only:\n1- same named files in the same folder with the header,\n2- files named after the container (namespace, class, struct, etc..) of the method/destructor/constructor/ on which the cursor is; are searched for.\n\nThis will work for the following case which is very common (Assuming that the GoTo Implementation is called on a method/constructor/destructor of ClassA defined in headerA.h and implemented in ClassA.cpp):\n\n>proj_dir\n>>include_dir\n>>>headerA.h\n\n>>source_dir\n>>>headerA.cpp\n>>>ClassA.cpp\n>>>ClassB.cpp\n\nAdditionally, this will also work if a general method (i.e. an operator that works on ClassA, is defined in 'headerA' namespace, defined in headerA.h and implemented in headerA.cpp)"
  },
  {
    "url": "https://api.github.com/repos/quarnster/SublimeClang/issues/comments/7477845",
    "html_url": "https://github.com/quarnster/SublimeClang/issues/106#issuecomment-7477845",
    "issue_url": "https://api.github.com/repos/quarnster/SublimeClang/issues/106",
    "id": 7477845,
    "user": {
      "login": "quarnster",
      "id": 1230389,
      "avatar_url": "https://secure.gravatar.com/avatar/10a89302c6736c988ce06d8a41c923c0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "10a89302c6736c988ce06d8a41c923c0",
      "url": "https://api.github.com/users/quarnster",
      "html_url": "https://github.com/quarnster",
      "followers_url": "https://api.github.com/users/quarnster/followers",
      "following_url": "https://api.github.com/users/quarnster/following",
      "gists_url": "https://api.github.com/users/quarnster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarnster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarnster/subscriptions",
      "organizations_url": "https://api.github.com/users/quarnster/orgs",
      "repos_url": "https://api.github.com/users/quarnster/repos",
      "events_url": "https://api.github.com/users/quarnster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarnster/received_events",
      "type": "User"
    },
    "created_at": "2012-08-03T07:56:54Z",
    "updated_at": "2012-08-03T07:56:54Z",
    "body": "As long as there's an os.walk blocking the main thread, I won't accept the pull request."
  },
  {
    "url": "https://api.github.com/repos/quarnster/SublimeClang/issues/comments/7484904",
    "html_url": "https://github.com/quarnster/SublimeClang/issues/106#issuecomment-7484904",
    "issue_url": "https://api.github.com/repos/quarnster/SublimeClang/issues/106",
    "id": 7484904,
    "user": {
      "login": "meyumer",
      "id": 1783195,
      "avatar_url": "https://secure.gravatar.com/avatar/0c90fca887102012b8841ac2c258d668?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "0c90fca887102012b8841ac2c258d668",
      "url": "https://api.github.com/users/meyumer",
      "html_url": "https://github.com/meyumer",
      "followers_url": "https://api.github.com/users/meyumer/followers",
      "following_url": "https://api.github.com/users/meyumer/following",
      "gists_url": "https://api.github.com/users/meyumer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meyumer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meyumer/subscriptions",
      "organizations_url": "https://api.github.com/users/meyumer/orgs",
      "repos_url": "https://api.github.com/users/meyumer/repos",
      "events_url": "https://api.github.com/users/meyumer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meyumer/received_events",
      "type": "User"
    },
    "created_at": "2012-08-03T14:38:55Z",
    "updated_at": "2012-08-03T14:38:55Z",
    "body": "I removed the folder search. That part remains unchanged. \n\nOnly fix included here is the extension to ctor/dtor implementations.\n\nWe can close this pull request with this, I might look into the threading issue if I can spare some time later.\n"
  },
  {
    "url": "https://api.github.com/repos/quarnster/SublimeClang/issues/comments/7530448",
    "html_url": "https://github.com/quarnster/SublimeClang/issues/106#issuecomment-7530448",
    "issue_url": "https://api.github.com/repos/quarnster/SublimeClang/issues/106",
    "id": 7530448,
    "user": {
      "login": "quarnster",
      "id": 1230389,
      "avatar_url": "https://secure.gravatar.com/avatar/10a89302c6736c988ce06d8a41c923c0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "10a89302c6736c988ce06d8a41c923c0",
      "url": "https://api.github.com/users/quarnster",
      "html_url": "https://github.com/quarnster",
      "followers_url": "https://api.github.com/users/quarnster/followers",
      "following_url": "https://api.github.com/users/quarnster/following",
      "gists_url": "https://api.github.com/users/quarnster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarnster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarnster/subscriptions",
      "organizations_url": "https://api.github.com/users/quarnster/orgs",
      "repos_url": "https://api.github.com/users/quarnster/repos",
      "events_url": "https://api.github.com/users/quarnster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarnster/received_events",
      "type": "User"
    },
    "created_at": "2012-08-06T17:54:23Z",
    "updated_at": "2012-08-06T17:54:23Z",
    "body": "The thread based os.walk scanning has now been implemented. It seemed to work fairly well from my limited testing."
  },
  {
    "url": "https://api.github.com/repos/quarnster/SublimeClang/issues/comments/7531046",
    "html_url": "https://github.com/quarnster/SublimeClang/issues/106#issuecomment-7531046",
    "issue_url": "https://api.github.com/repos/quarnster/SublimeClang/issues/106",
    "id": 7531046,
    "user": {
      "login": "meyumer",
      "id": 1783195,
      "avatar_url": "https://secure.gravatar.com/avatar/0c90fca887102012b8841ac2c258d668?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "0c90fca887102012b8841ac2c258d668",
      "url": "https://api.github.com/users/meyumer",
      "html_url": "https://github.com/meyumer",
      "followers_url": "https://api.github.com/users/meyumer/followers",
      "following_url": "https://api.github.com/users/meyumer/following",
      "gists_url": "https://api.github.com/users/meyumer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meyumer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meyumer/subscriptions",
      "organizations_url": "https://api.github.com/users/meyumer/orgs",
      "repos_url": "https://api.github.com/users/meyumer/repos",
      "events_url": "https://api.github.com/users/meyumer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meyumer/received_events",
      "type": "User"
    },
    "created_at": "2012-08-06T18:17:06Z",
    "updated_at": "2012-08-06T18:17:06Z",
    "body": "nice!\n\nI am going to report back if I see any issues."
  },
  {
    "url": "https://api.github.com/repos/quarnster/SublimeClang/issues/comments/7531359",
    "html_url": "https://github.com/quarnster/SublimeClang/issues/106#issuecomment-7531359",
    "issue_url": "https://api.github.com/repos/quarnster/SublimeClang/issues/106",
    "id": 7531359,
    "user": {
      "login": "quarnster",
      "id": 1230389,
      "avatar_url": "https://secure.gravatar.com/avatar/10a89302c6736c988ce06d8a41c923c0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "10a89302c6736c988ce06d8a41c923c0",
      "url": "https://api.github.com/users/quarnster",
      "html_url": "https://github.com/quarnster",
      "followers_url": "https://api.github.com/users/quarnster/followers",
      "following_url": "https://api.github.com/users/quarnster/following",
      "gists_url": "https://api.github.com/users/quarnster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarnster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarnster/subscriptions",
      "organizations_url": "https://api.github.com/users/quarnster/orgs",
      "repos_url": "https://api.github.com/users/quarnster/repos",
      "events_url": "https://api.github.com/users/quarnster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarnster/received_events",
      "type": "User"
    },
    "created_at": "2012-08-06T18:27:59Z",
    "updated_at": "2012-08-06T18:27:59Z",
    "body": "I messed up and the walk was actually done in the main thread. This has now been fixed. I also added in the regexp pre pass for finding the implementation (or fail to find it) much quicker."
  }
]
