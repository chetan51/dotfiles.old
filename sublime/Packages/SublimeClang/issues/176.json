[
  {
    "url": "https://api.github.com/repos/quarnster/SublimeClang/issues/comments/11082980",
    "html_url": "https://github.com/quarnster/SublimeClang/issues/176#issuecomment-11082980",
    "issue_url": "https://api.github.com/repos/quarnster/SublimeClang/issues/176",
    "id": 11082980,
    "user": {
      "login": "quarnster",
      "id": 1230389,
      "avatar_url": "https://secure.gravatar.com/avatar/10a89302c6736c988ce06d8a41c923c0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "10a89302c6736c988ce06d8a41c923c0",
      "url": "https://api.github.com/users/quarnster",
      "html_url": "https://github.com/quarnster",
      "followers_url": "https://api.github.com/users/quarnster/followers",
      "following_url": "https://api.github.com/users/quarnster/following",
      "gists_url": "https://api.github.com/users/quarnster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarnster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarnster/subscriptions",
      "organizations_url": "https://api.github.com/users/quarnster/orgs",
      "repos_url": "https://api.github.com/users/quarnster/repos",
      "events_url": "https://api.github.com/users/quarnster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarnster/received_events",
      "type": "User"
    },
    "created_at": "2012-12-06T12:17:57Z",
    "updated_at": "2012-12-06T12:17:57Z",
    "body": "SublimeClang isn't responsible for selecting items in the list. And no matter what sorting the plugin does, Sublime Text 2 still does some form of sorting of its own as can be seen by these two experiments where the order printed in the console is not what Sublime Text 2 chooses to display:\r\n\r\n```diff\r\ndiff --git a/sublimeclang.py b/sublimeclang.py\r\nindex b9a18ed..df3e4bd 100644\r\n--- a/sublimeclang.py\r\n+++ b/sublimeclang.py\r\n@@ -369,6 +369,10 @@ class SublimeClangAutoComplete(sublime_plugin.EventListener):\r\n                 kind == cindex.CursorKind.NOT_IMPLEMENTED\r\n \r\n     def return_completions(self, comp, view):\r\n+        regex = re.compile(r\"^(\\w+)\")\r\n+        comp = sorted(comp, key=lambda entry: regex.match(entry[0]).group(0))\r\n+        for c in comp:\r\n+            print c[0]\r\n         if get_setting(\"inhibit_sublime_completions\", True, view):\r\n             return (comp, sublime.INHIBIT_WORD_COMPLETIONS | sublime.INHIBIT_EXPLICIT_COMPLETIONS)\r\n         return comp\r\n```\r\n![Imgur](http://i.imgur.com/z411R.png)\r\n\r\n```diff\r\ndiff --git a/sublimeclang.py b/sublimeclang.py\r\nindex b9a18ed..088d36f 100644\r\n--- a/sublimeclang.py\r\n+++ b/sublimeclang.py\r\n@@ -369,6 +369,10 @@ class SublimeClangAutoComplete(sublime_plugin.EventListener):\r\n                 kind == cindex.CursorKind.NOT_IMPLEMENTED\r\n \r\n     def return_completions(self, comp, view):\r\n+        import random\r\n+        random.shuffle(comp)\r\n+        for c in comp:\r\n+            print c[0]\r\n         if get_setting(\"inhibit_sublime_completions\", True, view):\r\n             return (comp, sublime.INHIBIT_WORD_COMPLETIONS | sublime.INHIBIT_EXPLICIT_COMPLETIONS)\r\n         return comp\r\n```\r\n![Imgur](http://i.imgur.com/gmr4E.png)\r\n\r\nI'm certainly not going to spend more time on this than what I just did, but would be open to a pull request that improves the situation in case someone else knows of any tricks that can be done to make it better."
  }
]
