[
  {
    "url": "https://api.github.com/repos/quarnster/SublimeClang/issues/comments/10448286",
    "html_url": "https://github.com/quarnster/SublimeClang/issues/170#issuecomment-10448286",
    "issue_url": "https://api.github.com/repos/quarnster/SublimeClang/issues/170",
    "id": 10448286,
    "user": {
      "login": "mchamberlain",
      "id": 584351,
      "avatar_url": "https://secure.gravatar.com/avatar/033dbc977e59833535f5852f027fafc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "033dbc977e59833535f5852f027fafc7",
      "url": "https://api.github.com/users/mchamberlain",
      "html_url": "https://github.com/mchamberlain",
      "followers_url": "https://api.github.com/users/mchamberlain/followers",
      "following_url": "https://api.github.com/users/mchamberlain/following",
      "gists_url": "https://api.github.com/users/mchamberlain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mchamberlain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mchamberlain/subscriptions",
      "organizations_url": "https://api.github.com/users/mchamberlain/orgs",
      "repos_url": "https://api.github.com/users/mchamberlain/repos",
      "events_url": "https://api.github.com/users/mchamberlain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mchamberlain/received_events",
      "type": "User"
    },
    "created_at": "2012-11-16T14:22:50Z",
    "updated_at": "2012-11-16T14:22:50Z",
    "body": "My apologies, I just noticed some unit tests are failing. Busy fixing it."
  },
  {
    "url": "https://api.github.com/repos/quarnster/SublimeClang/issues/comments/10450145",
    "html_url": "https://github.com/quarnster/SublimeClang/issues/170#issuecomment-10450145",
    "issue_url": "https://api.github.com/repos/quarnster/SublimeClang/issues/170",
    "id": 10450145,
    "user": {
      "login": "quarnster",
      "id": 1230389,
      "avatar_url": "https://secure.gravatar.com/avatar/10a89302c6736c988ce06d8a41c923c0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "10a89302c6736c988ce06d8a41c923c0",
      "url": "https://api.github.com/users/quarnster",
      "html_url": "https://github.com/quarnster",
      "followers_url": "https://api.github.com/users/quarnster/followers",
      "following_url": "https://api.github.com/users/quarnster/following",
      "gists_url": "https://api.github.com/users/quarnster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarnster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarnster/subscriptions",
      "organizations_url": "https://api.github.com/users/quarnster/orgs",
      "repos_url": "https://api.github.com/users/quarnster/repos",
      "events_url": "https://api.github.com/users/quarnster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarnster/received_events",
      "type": "User"
    },
    "created_at": "2012-11-16T15:19:17Z",
    "updated_at": "2012-11-16T15:19:17Z",
    "body": "> I just feel it makes sense for the plug-in to have a built-in way\r\n(that doesn't rely on external scripts that may or may not be limited to a\r\ncertain platform or build system) to get different compile flags/options\r\nper source file.\r\n\r\nIs that your only argument for this? This adds a lot of complexity for such a tiny benefit and I really don't see why you can't have an external program spit out the same information. Like this python script:\r\n\r\n```python\r\nimport json\r\nimport sys\r\n\r\nf = open(sys.argv[1])\r\ndata = json.load(f)\r\nf.close()\r\nif sys.argv[2] in data:\r\n    for arg in data[sys.argv[2]]:\r\n        print arg\r\n\r\n```\r\n\r\nOr you could just create a small c program that does the same if you prefer."
  },
  {
    "url": "https://api.github.com/repos/quarnster/SublimeClang/issues/comments/10453399",
    "html_url": "https://github.com/quarnster/SublimeClang/issues/170#issuecomment-10453399",
    "issue_url": "https://api.github.com/repos/quarnster/SublimeClang/issues/170",
    "id": 10453399,
    "user": {
      "login": "mchamberlain",
      "id": 584351,
      "avatar_url": "https://secure.gravatar.com/avatar/033dbc977e59833535f5852f027fafc7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "033dbc977e59833535f5852f027fafc7",
      "url": "https://api.github.com/users/mchamberlain",
      "html_url": "https://github.com/mchamberlain",
      "followers_url": "https://api.github.com/users/mchamberlain/followers",
      "following_url": "https://api.github.com/users/mchamberlain/following",
      "gists_url": "https://api.github.com/users/mchamberlain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mchamberlain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mchamberlain/subscriptions",
      "organizations_url": "https://api.github.com/users/mchamberlain/orgs",
      "repos_url": "https://api.github.com/users/mchamberlain/repos",
      "events_url": "https://api.github.com/users/mchamberlain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mchamberlain/received_events",
      "type": "User"
    },
    "created_at": "2012-11-16T16:49:17Z",
    "updated_at": "2012-11-16T16:49:17Z",
    "body": "I suppose I was approaching this with a bit of tunnel vision, I really was just thinking about how I could solve the per source file options problem coming from something like a CMake generator, where ideally you just want to write a project file(s) that the that target software can load and then everything just works and is self-contained. Just that little bit of extra user-friendliness (which I suppose isn't necessarily such a big deal for programmers).\r\n\r\nThe only other consideration is that this way the options file is loaded only once, with the options script method it is loaded multiple times, but then again the file would have to be really large for that to become an issue.\r\n\r\nI suppose project generators could work around this issue by writing out a python script as part of the generation process, and then just leave it as a user configuration issue to ensure that python is executable/in the path."
  },
  {
    "url": "https://api.github.com/repos/quarnster/SublimeClang/issues/comments/10455346",
    "html_url": "https://github.com/quarnster/SublimeClang/issues/170#issuecomment-10455346",
    "issue_url": "https://api.github.com/repos/quarnster/SublimeClang/issues/170",
    "id": 10455346,
    "user": {
      "login": "quarnster",
      "id": 1230389,
      "avatar_url": "https://secure.gravatar.com/avatar/10a89302c6736c988ce06d8a41c923c0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "10a89302c6736c988ce06d8a41c923c0",
      "url": "https://api.github.com/users/quarnster",
      "html_url": "https://github.com/quarnster",
      "followers_url": "https://api.github.com/users/quarnster/followers",
      "following_url": "https://api.github.com/users/quarnster/following",
      "gists_url": "https://api.github.com/users/quarnster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarnster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarnster/subscriptions",
      "organizations_url": "https://api.github.com/users/quarnster/orgs",
      "repos_url": "https://api.github.com/users/quarnster/repos",
      "events_url": "https://api.github.com/users/quarnster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarnster/received_events",
      "type": "User"
    },
    "created_at": "2012-11-16T17:45:18Z",
    "updated_at": "2012-11-16T17:45:18Z",
    "body": "FYI, I have a [gist for CMake generated compile_commands.json](https://gist.github.com/3944250), mostly thanks to berenm.\r\n\r\nEven if the file was huge and took minutes to load, the script is run in a separate thread and only for new translation units so the only possible impact of loading it multiple times would be that it would take slightly longer before completion and navigation operations are available in a newly opened file (in theory&trade;).\r\n\r\nI don't see a compelling enough reason to merge this, but thank you for your effort :)"
  }
]
