[
  {
    "url": "https://api.github.com/repos/quarnster/SublimeClang/issues/comments/9969229",
    "html_url": "https://github.com/quarnster/SublimeClang/issues/156#issuecomment-9969229",
    "issue_url": "https://api.github.com/repos/quarnster/SublimeClang/issues/156",
    "id": 9969229,
    "user": {
      "login": "alpha-cast",
      "id": 2695677,
      "avatar_url": "https://secure.gravatar.com/avatar/0a593195aa332d3a11b93de418b77d91?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "0a593195aa332d3a11b93de418b77d91",
      "url": "https://api.github.com/users/alpha-cast",
      "html_url": "https://github.com/alpha-cast",
      "followers_url": "https://api.github.com/users/alpha-cast/followers",
      "following_url": "https://api.github.com/users/alpha-cast/following",
      "gists_url": "https://api.github.com/users/alpha-cast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alpha-cast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alpha-cast/subscriptions",
      "organizations_url": "https://api.github.com/users/alpha-cast/orgs",
      "repos_url": "https://api.github.com/users/alpha-cast/repos",
      "events_url": "https://api.github.com/users/alpha-cast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alpha-cast/received_events",
      "type": "User"
    },
    "created_at": "2012-11-01T02:35:16Z",
    "updated_at": "2012-11-01T02:35:16Z",
    "body": "It would also fix the case where there is only an implementation in a file, but no definition anywhere, as is often the case for local helper functions and the like. Currently goto implementation doesn't seem to work for that case, instead you have to use goto definition.\r\n\r\nThe implementation above would just take you to whatever information it CAN find regardless of which one you actually asked for."
  },
  {
    "url": "https://api.github.com/repos/quarnster/SublimeClang/issues/comments/9972879",
    "html_url": "https://github.com/quarnster/SublimeClang/issues/156#issuecomment-9972879",
    "issue_url": "https://api.github.com/repos/quarnster/SublimeClang/issues/156",
    "id": 9972879,
    "user": {
      "login": "quarnster",
      "id": 1230389,
      "avatar_url": "https://secure.gravatar.com/avatar/10a89302c6736c988ce06d8a41c923c0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "10a89302c6736c988ce06d8a41c923c0",
      "url": "https://api.github.com/users/quarnster",
      "html_url": "https://github.com/quarnster",
      "followers_url": "https://api.github.com/users/quarnster/followers",
      "following_url": "https://api.github.com/users/quarnster/following",
      "gists_url": "https://api.github.com/users/quarnster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarnster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarnster/subscriptions",
      "organizations_url": "https://api.github.com/users/quarnster/orgs",
      "repos_url": "https://api.github.com/users/quarnster/repos",
      "events_url": "https://api.github.com/users/quarnster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarnster/received_events",
      "type": "User"
    },
    "created_at": "2012-11-01T07:35:49Z",
    "updated_at": "2012-11-01T07:35:49Z",
    "body": "So basically do one operation and if nothing is found do the other?"
  },
  {
    "url": "https://api.github.com/repos/quarnster/SublimeClang/issues/comments/10000646",
    "html_url": "https://github.com/quarnster/SublimeClang/issues/156#issuecomment-10000646",
    "issue_url": "https://api.github.com/repos/quarnster/SublimeClang/issues/156",
    "id": 10000646,
    "user": {
      "login": "alpha-cast",
      "id": 2695677,
      "avatar_url": "https://secure.gravatar.com/avatar/0a593195aa332d3a11b93de418b77d91?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "0a593195aa332d3a11b93de418b77d91",
      "url": "https://api.github.com/users/alpha-cast",
      "html_url": "https://github.com/alpha-cast",
      "followers_url": "https://api.github.com/users/alpha-cast/followers",
      "following_url": "https://api.github.com/users/alpha-cast/following",
      "gists_url": "https://api.github.com/users/alpha-cast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alpha-cast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alpha-cast/subscriptions",
      "organizations_url": "https://api.github.com/users/alpha-cast/orgs",
      "repos_url": "https://api.github.com/users/alpha-cast/repos",
      "events_url": "https://api.github.com/users/alpha-cast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alpha-cast/received_events",
      "type": "User"
    },
    "created_at": "2012-11-01T23:59:47Z",
    "updated_at": "2012-11-01T23:59:47Z",
    "body": "Kind of.\r\n\r\nBy default goto implementation.\r\nIf no implementation found, or cursor already at implementation, then goto definition.\r\n\r\nSo if you keep pressing the magic goto button, it'll jump back and forth between implementation and definition, because the cursor will already be at one of them, so it'll go to the other. If you're anywhere else in code (on a call to the function for instance), then just goto the implementation.\r\n\r\nImplementation is almost always the one I want to go to, because it contains a superset of the info found at the definition, plus it's where I go if I want to change code. I only usually go to definition when I've updated the function signature. Might be different for other people though I suppose.\r\n\r\nMy second post was just mentioning that it'd fix a side issue for me as well. In some code I don't know whether a function has a separate definition to the implementation, so I just have try goto implementation, and if that doesn't work, then I try goto definition which then takes me to the combined implementation/definition."
  },
  {
    "url": "https://api.github.com/repos/quarnster/SublimeClang/issues/comments/10005473",
    "html_url": "https://github.com/quarnster/SublimeClang/issues/156#issuecomment-10005473",
    "issue_url": "https://api.github.com/repos/quarnster/SublimeClang/issues/156",
    "id": 10005473,
    "user": {
      "login": "quarnster",
      "id": 1230389,
      "avatar_url": "https://secure.gravatar.com/avatar/10a89302c6736c988ce06d8a41c923c0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "10a89302c6736c988ce06d8a41c923c0",
      "url": "https://api.github.com/users/quarnster",
      "html_url": "https://github.com/quarnster",
      "followers_url": "https://api.github.com/users/quarnster/followers",
      "following_url": "https://api.github.com/users/quarnster/following",
      "gists_url": "https://api.github.com/users/quarnster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quarnster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quarnster/subscriptions",
      "organizations_url": "https://api.github.com/users/quarnster/orgs",
      "repos_url": "https://api.github.com/users/quarnster/repos",
      "events_url": "https://api.github.com/users/quarnster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quarnster/received_events",
      "type": "User"
    },
    "created_at": "2012-11-02T05:42:24Z",
    "updated_at": "2012-11-02T05:42:24Z",
    "body": "I probably won't implement this myself. Marking as such, but will leave the issue open a bit for attention in case someone wants to give it a try."
  }
]
